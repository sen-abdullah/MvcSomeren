@model MvcSomeren.Models.Room
@{
    ViewData["Title"] = "Create Room";
}

<h4>New Room</h4>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<form action="/Rooms/Create" method="POST">
    <input hidden type="number" name="RoomId" value="@Model?.RoomId" />

    <div class="form-group py-2">
        <label for="RoomNumber">Room Number:</label>
        <input type="number" id="RoomNumber" name="RoomNumber" class="form-control" required value="@Model?.RoomNumber" />
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoomType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RoomType, new List<SelectListItem>
            {
            new SelectListItem { Text = "Student", Value = "Student" },
            new SelectListItem { Text = "Lecturer", Value = "Lecturer" }
            }, new { @class = "form-control", id = "RoomType", onchange = "updateRoomOptions()" })
            @Html.ValidationMessageFor(model => model.RoomType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group py-2">
        <label for="RoomSize">Room Size:</label>
        <select id="RoomSize" name="RoomSize" class="form-control"></select>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Building, new List<SelectListItem>
            {
            new SelectListItem { Text = "A1", Value = "A1" },
            new SelectListItem { Text = "B1", Value = "B1" },
            new SelectListItem { Text = "B0", Value = "B0" },
            new SelectListItem { Text = "A0", Value = "A0" }
            }, new { @class = "form-control", id = "Building" })
            @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Floor, new List<SelectListItem>
            {
            new SelectListItem { Text = "01", Value = "01" },
            new SelectListItem { Text = "02", Value = "02" }
            }, new { @class = "form-control", id = "Floor" })
            @Html.ValidationMessageFor(model => model.Floor, "", new { @class = "text-danger" })
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Add</button>
</form>

<a href="/Rooms/Index">Back to List</a>

<script>
    function updateRoomOptions() {
        var roomType = document.getElementById("RoomType").value;
        var roomSizeSelect = document.getElementById("RoomSize");
        var buildingSelect = document.getElementById("Building");
        var floorSelect = document.getElementById("Floor");

        roomSizeSelect.innerHTML = "";

        if (roomType === "Lecturer") {
            roomSizeSelect.innerHTML += '<option value="1">1 Bed</option>';

            buildingSelect.value = "A1";
            floorSelect.value = "01";

            buildingSelect.setAttribute("readonly", true);
            floorSelect.setAttribute("readonly", true);
        } else if (roomType === "Student") {
            roomSizeSelect.innerHTML += '<option value="8">8 Beds</option>';

            buildingSelect.removeAttribute("readonly");
            floorSelect.removeAttribute("readonly");
        }

        var selectedRoomSize = "@Model?.RoomSize";
        if (selectedRoomSize) {
            roomSizeSelect.value = selectedRoomSize;
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        updateRoomOptions();

        var roomSizeSelect = document.getElementById("RoomSize");
        var buildingSelect = document.getElementById("Building");
        var floorSelect = document.getElementById("Floor");

        var savedRoomSize = "@Model?.RoomSize";
        var savedBuilding = "@Model?.Building";
        var savedFloor = "@Model?.Floor";

        if (savedRoomSize) {
            roomSizeSelect.value = savedRoomSize;
        }
        if (savedBuilding) {
            buildingSelect.value = savedBuilding;
        }
        if (savedFloor) {
            floorSelect.value = savedFloor;
        }
    });
</script>

