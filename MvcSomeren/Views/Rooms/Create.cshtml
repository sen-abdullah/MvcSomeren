@model MvcSomeren.Models.Room
@{
	ViewData["Title"] = "Create Room";
}

<div>
	<div class="d-flex justify-content-center mr-6 my-lg-5">
		<h4>New Room</h4>
	</div>
	<div class="d-flex justify-content-center mb-4">
		<a href="/Rooms/Index" class="back-to-list mx-4">Back to List</a>
	</div>

	<form action="/Rooms/Create" method="POST">

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<input hidden type="number" name="RoomId" value="@Model?.RoomId" />

		<div class="form-group row">
			<div class="form-group form-control-lg">
				<label for="RoomNumber">Room Number:</label>
				<input type="number" id="RoomNumber" name="RoomNumber" class="form-control" required value="@Model?.RoomNumber" />
			</div>

			<div class="form-group form-control-lg col-md-4">
				@Html.LabelFor(model => model.RoomType, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.RoomType, new List<SelectListItem>
					{
					new SelectListItem { Text = "Student", Value = "Student" },
					new SelectListItem { Text = "Lecturer", Value = "Lecturer" }
					}, new { @class = "form-control", id = "RoomType", onchange = "updateRoomOptions()" })
					@Html.ValidationMessageFor(model => model.RoomType, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group col-md-6 form-control-lg">
				<label for="RoomSize">Room Size:</label>
				<select id="RoomSize" name="RoomSize" class="form-control"></select>
			</div>

			<div class="form-group form-control-lg col-md-4">
				@Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.Building, new List<SelectListItem>
					{
					new SelectListItem { Text = "A1", Value = "A1" },
					new SelectListItem { Text = "B1", Value = "B1" },
					new SelectListItem { Text = "B0", Value = "B0" },
					new SelectListItem { Text = "A0", Value = "A0" }
					}, new { @class = "form-control", id = "Building" })
					@Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group form-control-lg col-md-4">
				@Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.Floor, new List<SelectListItem>
					{
					new SelectListItem { Text = "01", Value = "01" },
					new SelectListItem { Text = "02", Value = "02" }
					}, new { @class = "form-control", id = "Floor" })
					@Html.ValidationMessageFor(model => model.Floor, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
			<div class="mx-1 my-4">
				<button type="submit" class="button-save">Add</button>
			</div>
	</form>
</div>

<script>
	function updateRoomOptions() {
		var roomType = document.getElementById("RoomType").value;
		var roomSizeSelect = document.getElementById("RoomSize");
		var buildingSelect = document.getElementById("Building");
		var floorSelect = document.getElementById("Floor");

		roomSizeSelect.innerHTML = "";

		if (roomType === "Lecturer") {
			var option1 = document.createElement("option");
			option1.value = "1";
			option1.text = "1 Bed";
			roomSizeSelect.appendChild(option1);

			buildingSelect.value = "A1";
			floorSelect.value = "01";
			buildingSelect.disabled = true;
			floorSelect.disabled = true;
		} else if (roomType === "Student") {
			var option1 = document.createElement("option");
			option1.value = "8";
			option1.text = "8 Beds";
			roomSizeSelect.appendChild(option1);

			buildingSelect.disabled = false;
			floorSelect.disabled = false;
		}
	}

	document.addEventListener("DOMContentLoaded", function () {
		updateRoomOptions();

		var roomSizeSelect = document.getElementById("RoomSize");
		var buildingSelect = document.getElementById("Building");
		var floorSelect = document.getElementById("Floor");

		var savedRoomSize = "@Model?.RoomSize";
		var savedBuilding = "@Model?.Building";
		var savedFloor = "@Model?.Floor";

		if (savedRoomSize) {
			roomSizeSelect.value = savedRoomSize;
		}
		if (savedBuilding) {
			buildingSelect.value = savedBuilding;
		}
		if (savedFloor) {
			floorSelect.value = savedFloor;
		}

		document.querySelector("form").addEventListener("submit", function () {
			document.getElementById("Building").disabled = false;
			document.getElementById("Floor").disabled = false;
		});
	});
</script>

